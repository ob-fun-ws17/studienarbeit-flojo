
==================== FINAL INTERFACE ====================
2018-01-26 13:17:42.39679761 UTC

interface Webserver-0.1.0.0-2wIQjDRlL5PNyKB5c30ID:Read 8002
  interface hash: 6cfd61f44f9aa8ee3e6275d99cdbfaf2
  ABI hash: 5d0e1415f79f1de5c2174962365f8c8d
  export-list hash: 393420b1bf0cc50050166d747c8e4891
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ededd53b8c2278c6bbf6fc26ffae74e4
  sig of: Nothing
  used TH splices: False
  where
exports:
  Read.read
module dependencies: Response.Error
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      bytestring-0.10.8.1@bytestring-0.10.8.1*
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
import  -/  Response.Error b2c8266c520c04f6411f368c45b18c9d
  exports: b758e62580fd0897c79f914642b73e71
  Error 6fa3f0a3f33a5f07af56440a4f91a6e4
  FileDoesNotExist 2f7aad4cdefba9dd003844e24cffd4c4
import  -/  base-4.9.1.0:Control.Exception a76dd9666251322fe34dbcca3a0817bf
import  -/  base-4.9.1.0:Control.Exception.Base 1e106916283856f4d9caeddab92cd861
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.IO.Exception 5064be4c355632a1d1c4f2322f56ac52
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString 43e99fdac51908da414a28958688da64
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Internal 89cda42ec946d9d6577dd41ab95d523e
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
3fbb09249cca0d3494e6b72490de5174
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Read.$trModule2 Read.$trModule1) -}
2387868cb214070a07be9885e1d7a1d7
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Read"#) -}
244c4aa1ca40f30f5252cc89a1d19792
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Webserver-0.1.0.0-2wIQjDRlL5PNyKB5c30ID"#) -}
266146cbdf0e698b97ea0f9f45b18f19
  type FileContents = Data.ByteString.Internal.ByteString
8f2abde7fb057aa8761726d82aaa81c2
  type RequestResult =
    Data.Either.Either Response.Error.Error Read.FileContents
2fe90d57fce86fd43fffdd941e68a1eb
  read :: GHC.Base.String -> GHC.Types.IO Read.RequestResult
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Read.read1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.Either.Either
                                  Response.Error.Error Data.ByteString.Internal.ByteString>_R)) -}
1a430e81702a9b4448eb90d33865bf88
  read1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Response.Error.Error Data.ByteString.Internal.ByteString #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (path :: GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ (Data.Either.Either
                        Response.Error.Error Data.ByteString.Internal.ByteString)
                   @ GHC.Exception.SomeException
                   (GHC.Magic.lazy
                      @ (GHC.Types.IO
                           (Data.Either.Either
                              Response.Error.Error Data.ByteString.Internal.ByteString))
                      (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                       case Data.ByteString.readFile1 path s of ds1 { (#,#) ipv ipv1 ->
                       (# ipv,
                          Data.Either.Right
                            @ Response.Error.Error
                            @ Data.ByteString.Internal.ByteString
                            ipv1 #) })
                        `cast`
                      (Sym (GHC.Types.N:IO[0]
                                <Data.Either.Either
                                   Response.Error.Error Data.ByteString.Internal.ByteString>_R)))
                     `cast`
                   (GHC.Types.N:IO[0]
                        <Data.Either.Either
                           Response.Error.Error Data.ByteString.Internal.ByteString>_R)
                   Read.read2
                   eta) -}
7d3ac9b00b71b34042d79aed30f549f1
  read2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Response.Error.Error Data.ByteString.Internal.ByteString #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ (Data.Either.Either
                             Response.Error.Error Data.ByteString.Internal.ByteString)
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ (Data.Either.Either
                                  Response.Error.Error Data.ByteString.Internal.ByteString)
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta,
                              Data.Either.Left
                                @ Response.Error.Error
                                @ Read.FileContents
                                (Response.Error.FileDoesNotExist
                                   (GHC.IO.Exception.$fExceptionIOException_$cshow
                                      e2
                                        `cast`
                                      (UnsafeCo representational e100 GHC.IO.Exception.IOException))) #) } } } } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

